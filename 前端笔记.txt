块级标签：
	段落标签<p>....</p>
	水平线标签:<hr/>  一般作为分隔符
	标题标签：<h1>..</h1>(1--6)//依次字体变小
	有序列表标签：<ol>
               <li>.....</il>
              </ol>
	无序列表标签：<ul>  list-style:none去掉前面的点
              <li>...</li>
	      <li>...</li>
	      </ul>
	定义描述标签：<dl> 
              <dt>标题 （要描述的）</dt>
	      <dd>描述的内容</dd>//可以有多个描述对象和内容
              </dl>
	分区标签：<div> 头部内容</div>
          <div>导航内容</div>
	  <div>底部内容</div>


********苦逼的分割线********
行级标签：
	<b>定义粗体
	<i>定义斜体
	<em>强调 类似于斜体
	<strong>定义粗体
	<small>定义小号文本
	<sub>定义下标
	<sup>定义上标
	<bdo>定义文本显示方向 例如：<bdo dir="rtl"> 显示</bdo>
                       效果：示显

	超链接标签：<a href="地址" target="目标窗口">链接文本或图片</a>
            href：指定超链接所关联的另一种资源
	    target：_self:覆盖原本的框架
                    _blank:重新打开一个框架
		    _top:
		    _parent:

	图像标签：<img  src="地址" alt=“提示文字”>

	<span>:修饰文本等行级内容
	<br/> 换行  相较于<p></p>空格较大

特殊的符号:
     空格：&nbsp;
     大于(>)&gt;
     小于(<)&lt;
     引号(")：&quot;
     版权号：&copy;

*******苦逼的分割线******
 html框架：
    frameset框架
     过程：1，创建各个子窗口对应的html文件；
           2，创建整个框架文件，分别引用子窗口文件；
    基本语法：
          <frameset  cols="25%,50%,*"  rows="50%,*"  border="5">
              <frame src ="top.html">
	      .......
	   </frameset>
       注意：<frameset></frameset>标签不能与<body></body>标签同时使用。除非你在
             <frameset>中使用<noframes>标签
	常用属性：cols   pixels  ，%，*  作用:定义框架集中列的数目和尺寸
	          rows   pixels  ，%，*       定义框架集中行的数目和尺寸
        
    iframe内嵌框架
       属性：     可以嵌入很多地方  很灵活  多使用iframe
		  frameborder   0  显示   1  不显示
		  name   frame_name    规定iframe的名称
		  scrolling    yes（显示）  no（不显示）   auto（当超过界面范围时显示滚动条）
		  src    url   iframe  中显示的文档的url
		  width   height
       语法：<body>
		<iframe  src="引用页面地址" name="框架名称" frameborder ="边框" scrolling="yes"/>
	      </body >
自己写一个浏览器首页

表格标签的使用 ：
		<table> </table>  width="50%"  height=""  border="" bgcolor=""//背景色 cellspacing=""//单元格之间的距离  cellpadding="30px" //单元格中字体与边框之间的距离
		<tr>    一行    
		<td>     一个单元格  rowspan="2"  上下跨几个单元格  colspan=“2”左右跨两个单元格  align="right/center/left"
		<caption>  表的标题
		<th>    表的每一列的名称
		<thead> 第一行 表眉的属性
		<tbody>
		<tfoot>
	主要用于规则的数据显示
	适当的可以在表格页面中使用
      缺点:代码量大  页面速度慢
	    层次结构复杂  不易于维护和改版
	    不利于搜索引擎搜索查找数据
   禁止使用表格进行网页布局，推荐使用div+css 进行网页
   布局
-----------《苦逼的分隔线》--------------------
form标签：表单
	action:表单提交地址谁处理  method ：提交方法
	enctype ：表单数据的编码方式
		application/x-www-form-urlencoded:默认的编码方式将表单控件中的值处理成url编码方式
		mutipart/form-data：以二进制流的方式来处理表单数据
		
/plain:当表单的action属性值为maito：url的形式时使用
	method:指定昔年个服务器递交的方式一般为get和post两种方式
		get
		post：传送数据量大通常认为不限制 但服务器端会限制
	<form  action    method>
		文本框 按钮
	</form>
  常见表单元素        ：input元素  
			type：单行文本框：<input..../>type==text    maxlangth  ：最大输入长度
			      密码框		  type==password
			      隐藏域type=hidden
			      单选框 type=radio
			      复选框 type=checkbox
			      图像域 type=image  可指定width与height
			      文件上传域 type=file
			      提交重置普通按钮 type=submit/reset/button
			checked（type==checkbox/radio） 设置单选框和复选框初始状态是否为选中状态 
			disabled（!type==hidden）设置首次加载时禁用此元素
			maxlength 该属性是一个数字，指定文本框中所允许的最大字符数
			readonly 指定该文本框中的值无法被修改（可用jsp脚本动态修改）
			size  （！type==hidden）该属性是一个数字，指定该元素的长度 
			src（type==image） 指定图像域所显示的url
			disabled="disabled"  使复选框无法被使用
                    button定义按钮  与type同级
			<button type="按钮类型">
				普通文本 格式化文本 图像
			</button>
			属性：disabled  禁用此元素
				name  按钮的唯一名称
				type 那种按钮  button reset submit
				
				button提交按钮<button type="submit" name="submit2">提交按钮</button></br>
			label标签  <label for="password">密码：</label>
		    列表框 和下拉菜单：
			<select name="指定列表内容 "  ="行数">
				<option value="选项值" selected=“selected”>...</option>
			</select>
			属性 ：disabled
				mutiple 是否可多选
				size  列表同时显示几个选项
				value
			下拉菜单比列表框少个size属性
			子元素：option：
					disabled
					selected:默认是否选中
					value:指定该选项对应的参数值
				<optgroup>
					label：选项组的标签
					disabled
			多行文本框：<textarea name="" cols ="列宽" rows="行宽">
					文本内容	
				    </textarea>
				    属性：cols
					  rows
					  readonly
					  
					  
---------------《苦逼的分割线》-------------------
css样式学习
基本语法：选择符{样式属性：取值；样式属性：取值；。。。。。}
			例如：body{background-color:red}  修饰body属性，背景颜色为红色
		 添加css的四种方法：链接外部样式表，内部样式表，导入外部样式表，内嵌样式
	1.链接外部样式表：最适合大型网站的css样式定义
	：在网页中调用已经定义好的样式表来实现样式表的应用，他是一个单独的文件，在页面中用<link>标记链接到这个样式表文件，<link>标记必须放在页面的<head>标签内
	<head>
	<link rel=stylesheet type=text/css href=文件位置>
	</head>
	2,内部样式表：内部样式表一般位于HTML文件的头部，并且以<style>开始，以</style>结束
	3，导入外部样式表：指在内部样式表的<style>里导入一个外部样式表，导入是用@import
	例如：
	<head>
	<style>
	<!-
	@import slstyle.css<!slstyle.css是外部样式表>
		其他样式表的声明
	-->
	</style>
	</head>
	4，内嵌样式：虽然简单直观，但是因无法发挥样式表的优势，因此不推荐使用 ：内嵌样式是混合在HTML标记里使用的，这种方法可以方便简单的对某个元素单独定义样式，他主要是在<body>内实现。内嵌样式的使用是直接在HTML标记里面添加style参数，而style参数的内容就是css的属性和值，在style参数后面的引号里面的内容相当于在样式表大括号里的内容
	<table style=color:red;margin-right:220px>   tr 和td
		<p>
		这是个表格
		</p>
	</table>
	
	
	字体属性：
	字体：font-family
	例如：font-family:"字体1","字体2";
	浏览器会由前向后选择，字体1不支持时，选择字体2  依次类推  当都不支持时，采用系统默认字体
	字号：font-size
	font-size:取值大小
	取值范围:xx-small:绝对字体尺寸，最小
			 x-small:绝对字体尺寸，较小
			 small:绝对字体尺寸，小
			 medium:绝对字体尺寸，正常默认值
			 large:绝对字体尺寸，大
			 x-large:绝对字体尺寸，较大
			 xx-large:绝对字体尺寸，最大
			 larger:相对字体尺寸，相对于父对象字体尺寸进行相对增大
			 small:相对字体尺寸，相对于父对象字体尺寸进行相对减小
			 length:可采用百分比或长度值，不可为负值，其百分比取值是基于父对象中字体的尺寸
	字体风格：font-style
	用来设置字体是否为斜体
	font-style:样式取值
				范围：normal 正常字体
					  italic斜体显示文字
					  oblique属于中间状态，以偏斜体显示
	加粗字体：font-weight
	font-weight:字体粗细值
				取值范围：normal正常
						  bold：粗体
						  bolder：特粗体
						  lighter：特细体
						  number:取值范围：100~900
	小写字母转大写字母：font-variant
	font-variant:取值大小：normal 正常显示 不转换
							small-caps  小写字母转大写字母
	字体符合属性:font
	例如：.h{font:bold italic "宋体"}
	
	
	颜色和背景属性：background
		颜色属性：color
		背景颜色：background-color
		背景图像：background-image
			例如：background-image:url(image/ber_12.gif);
		背景重复：background-repeat  设置背景图像是否平铺，并且可以设置如何平铺
			取值：repeat  平铺排满整个网页
				  repeat-x水平方向平铺
				  repeat-y 垂直方向向上平铺
				  no-repeat 不平埔
		背景附件：background-attachment：背景图像是否是随着对象滚动还是固定不动
			取值：scroll 默认值  背景图像随着对象滚动而滚动
					fixed  背景图像固定在页面上不动
		背景位置：background-position  仅用于块级元素和替换元素（img input textarea selcet object）
			取值：数字，百分比，关键字：忘了就自己去查九个位置
	
	段落属性：
		单词间隔：word-spacing
			取值：normal：默认值
				  长度值
		字符间隔：letter-spacing
		文字修饰：text-decoration  设置下滑线等
			取值：none 默认值不修饰
				  underline 添加下划线
				  overline 添上上划线
				  line-through 添加删除线
				  blink  文字闪烁效果
		垂直对齐方式：vertical-align
			取值：baseline  浏览器默认的垂直对齐方式
				  sub：文字下标
				  super：文字上标
				  top：垂直靠上对齐
				  text-top：是元素和上级元素的字体向上对齐
				  middle：垂直居中对齐
				  text-bottom：元素和上级元素的字体向下对齐
		水平对齐：text-align
			取值：left，right，center ，justify：两端对齐
		文本缩进：text-indent
			取值：缩进值必须是一个长度或者一个百分比
		文本转化：text-transform   转换英文字母的大小写
			取值：none 默认值  使用原始值
				  capitalize：每个单词首字母大写
				  uppercase：每个单词的所有字母大写
				  lowercase：每个单词的所有字母都小写
		文本行高：line-height
			取值：长度，倍数，百分比
		处理空白：white-space
			取值：normal默认
				  pre 空格换行符被保留   一般无法正确显示
				  nowrap 同一行显示所有文本，直到遇到<br>
		文本反排：unicode-bidi,direction    这两个属性经常用在一块，来设置对象的阅读顺序
			unicode-bidi:取值：bidi-override 严格按照direction属性的值重排序
							   normal：表示默认值
							   embed：表示对象打开附加的潜入层，direction属性的值指定潜入层，在对象内部进行隐式重排序
			direction：取值：ltr从左到右
							 rtl从右向左
							 inherit文本流的值不可继承
							 
	外边距和内边距属性：外边距属性：元素周围的边界宽度，包括上下左右四个边界的距离
						内边界同理：
						取值：数值或者百分比单位
						盒子模型：content  padding border margin
						Content区:属性：width,height,overflow
						padding 内边距 内容区和边框之间的空间，
								属性：padding-top
											 -bottom
											 -left
											 -right
									  padding
						border边框区 属性:border-style
												-width
												-color
										  border
						margin 外边距区：margin-top
											   -bottom
											   -left
											   -right
										 margin
	边框属性：宽度属性，颜色，样式
		样式：border-style：border-style:样式值
							border-top-style：
							border-right-style。。。
							border-bottom-style。。。
							border-left-style。。。。
					样式值取值；none 	:默认值
								dotted	：点线边框
								dashed	：虚线边框
								solid	：实线边框
								double	：双实线边框
								groove	：边框具有立体感的沟槽
								ridge	：边框成脊型
								inset	：是整个边框凹陷，即在边框内嵌入一个立体边框
								outset	：使整个边框突起，即在边框外在嵌入一个立体边框
		边框宽度：border-width 
						-top-width
						-right-width
						-bottom-width
						-left-width
				取值：medium 默认大小
					  thin 小于默认大小
					  thick 大于默认大小
					    长度是有数字和单位组成的长度值，不可为负值
		边框颜色：border-color
						-top-color
						-right-color
						-bottom-color
						-left-color
						取值：十六进制
		
		边框：border 
			取值：border 宽度，样式，颜色
				  border-top 上边框 宽度，样式，颜色
						-right 
						-bottom
						-left 取值类似
		
		
		定位属性：
			定位方式：position 
					取值：static 表示默认值
						  absolute 采取绝对定位，同时需要使用left ，right，top，bottom等属性进行绝对定位
						  fixed：当页面滚动时元素不随之滚动
						  relative 采用相对定位，对象不可重叠
			元素位置：top ，right，bottom，left
				取值：top：auto|长度值|百分比
					  right、
					  bottom
					  left 同上
			层叠顺序：z-index
				取值：auto，数字
						数字必须是无单位的整数值，可以取负值
			浮动属性：float
					  float：none，left，right
			清除属性：clear 指定一个元素是否允许有其他元素漂浮在他的周围
					  取值：none 默认值
							left  左侧不允许有浮动对象
							right 同上
							both  不允许
			可视区域：clip
							
							

							
							
关于浮动:清除浮动的方法;1, 使用空div  添加 属性 css clear:both;
						2,子元素浮动  将父类overflow hidden/auto
						3,	
							
Bootstrap 前端框架的Css12 栅格系统制作一个响应式首页
bootstrap包含了一个响应式的，移动设备优先的，不固定的栅格系统，可以随着设备或视口的大小增加而是当的扩展到12列
							


<!-----------------苦逼的分割线----------------------->
html中 以“ & ”作为转义字符的开头例如：&l
	
	
	text-decoration: none;  去掉超链接的下划线
	border-radius:xxpx  使得div边框有一定的弧度	
	placeholder 提示文字
	列表:list-style-type:可设置列表前面的是点还是空格
		 cursor:可设置鼠标移动到上方后是小手还是选中标志


前端问题 : input type=number 问题
			output
			fieldset
			legend
		input-formaction属性

		input 选中后不显示蓝色边框  outline 属性设置边框颜色 可以直接去掉边框
